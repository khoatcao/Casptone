version: 2
jobs:
  build-and-push:
    machine:
      image: circleci/python:3.8
      resource_class: medium  # Use a valid resource class for your environment
    working_directory: ~/app
    steps:
      - checkout

      # Install Docker and Docker Compose
      - run:
          name: Install Docker and Docker Compose
          command: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER  # Add the current user to the docker group
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      # Authenticate with AWS ECR
      - run:
          name: Authenticate with AWS ECR
          command: aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_REGISTRY_URL

      # Build Docker Image
      - run:
          name: Build Docker Image
          command: |
            docker-compose build

      # Tag Docker Image
      - run:
          name: Tag Docker Image
          command: |
            docker tag my-flask-app:latest $AWS_REGISTRY_URL/my-app:my-tag

      # Push to AWS ECR
      - run:
          name: Push to AWS ECR
          command: |
            docker push $AWS_REGISTRY_URL/my-app:my-tag

workflows:
  version: 2
  build:
    jobs:
      - build-and-push
